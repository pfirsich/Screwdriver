* Mit Markus reden
	* Numberwheel-Trafo + shapes -> shapes updaten wenn nötig? oder einfach immer. (statt an speziellen momenten). Oder wie?
	* Pfad-Problem erklären: Sind alle durcheinander, wenn man die beim speichern/laden relativieren will, muss man entweder den ursprünglichen speicherort der ganzen datei kennen (was auch nur ein hack ist), damits überhaupt geht. zusätzlich muss man auch wissen was für strings man transformieren muss. Muss man dann Pfade markieren irgendwie? Oder ne Funktion schreiben die zuverlässig strings als pfade identifiziert? (impossible). Alternativ kann man vom filebrowser einfach immer relative pfade auskacken lassen. Aber zu was? Map dateien forcen!
		=> Am Anfang den extra-Modus einbauen. Mehr Modi fürs Ding! Special modi (statt allgemeine (inkl. default)), damit alles schöner?
		Dann kann man alle Pfade relativ zur Map-Datei machen (daher muss man vorraussetzen, dass eine existiert). 
* specialModes
	* default, filebrowser (skalierbare Imagepreviews), startup (zwei buttons) -> filebrowser
	* with the startup mode initialization (especially in save/load and map.lua) can/should look different
	* newImage abstrahieren und auf io-Implementation umsteigen

* Color picker + Color fürs Sprite
	* Drei Numberwheels untereinander + ein rectangle mit gepickter Farbe?
* Polygone!
	* Wie starten die? Preset-Buttons, Textur-Buttons (auch Trafos), Trafos, Funktionen für Modis?
* Show Details

Later/Maybe: 
* specialModes in globalModes verwandeln und alles vom normalen editor-mode darein verschieben und schöner machen
	gui.base wird dann globalModes[currentMode].gui oder gui[currentMode] oder gui.base[currentMode]
	Vielleicht aber auch nicht, damit die Funktionsaufrufe im CLI nicht so doof aussehen und alles etwas einfacher ist? -> Markus fragen
* Nochmal genau überlegen was in editor und was in map gehört oder was global ist.
	vllt. nur Dinge in editor in der cli zulassen und alles andere vorher nillen. Dann auch alles aus global entfernen, was man vllt. benutzen könnte aber nicht sollte und sonst vllt. nach editor verschieben.
* Up/Down key in console (history)
* Only show component-info in scene window if component is actually used in the scene
* Move all file buttons to File-Component?
* Limit number of lines in console -> config file maybe?
* Properly passing mousewheel events so scrollbars do what they should do at all times
* Falls komplette deepe Kopien von map auf dem Mapstack ein Speicherproblem bergen, nur alle X einträge voll speichern + delta-befehle
* J-Query mäßig verschiedene Entites selecten (nach id/type) und operationen anwenden

Bugs:
* GUI
	* Breakout-Widgets sind kaka (siehe Numberwheel für's grid spacing) (oder close-buttons)
* Map-Loading?
* Up/Down mit multiple selection macht funky sachen, wenn alle ausgewählten schon ganz oben sind
* editModes kacken ein bisschen ab, wenn man position, scale oder rotation des Transform-Components auf nil setzt