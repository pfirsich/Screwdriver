* onFocusLost implementieren
	* Darauf triggern, dass Numberwheels die value in das textfeld zurückschreiben, ansonsten
		passiert das nicht mehr, jedoch werden weiterhin inputs rejected, wenn das ergebnis keine Zahl ist.
		Die Numberwheel-value wird weiterhin, wenn möglich, kontinuierlich aus dem textfeld geupdated.
		Der Input von Zeichen [^.-0123456789] ist weiterhin verboten, allerdings können zahlen auch mit . anfangen.
		Das entretarded die Numberwheels und behebt hoffentlich den crash

		? Vielleicht auch alle Inputs aus [.-0123456789] zulassen und bei focus lost den String in eine Zahl "zwingen" =
		nur ein minus am anfang zulassen und nur den ersten punkt behalten
	* Alle Numberhweels/Textfelder/Colors usw. (?) auf onFocusLost cliExec ausführen lassen
-- BA only
* Polygone!
	* Wie starten die? Preset-Buttons, Textur-Buttons (auch Trafos), Trafos, Funktionen für Modis? Transforms-Component für Texturen benutzen?
* Show Details

Later/Maybe:
* Background colors? Mit Markus über Hintergründe reden
	static component properties in die Mapdatei?

* Focus benutzen um den Zeitpunkt für einen commit auf den map stack zu erkennen (fokus auf ein ui element -> changes -> fokus verloren -> commit)
* Error handling gründlich überdenken - jedes mal error ist ziemlich ungeil

* Arrow key + enter Bedienung im filebrowser
* Implement cmd for Numberwheel, String and Checkbox gui elements
* specialModes in globalModes verwandeln und alles vom normalen editor-mode darein verschieben und schöner machen
	gui.base wird dann globalModes[currentMode].gui oder gui[currentMode] oder gui.base[currentMode] oder globalMode.gui (globalMode hält dann immer den aktuellen Mode)
	Vielleicht aber auch nicht, damit die Funktionsaufrufe im CLI nicht so doof aussehen und alles etwas einfacher ist? -> Markus fragen
* Nochmal genau überlegen was in editor und was in map gehört oder was global ist.
	vllt. nur Dinge in editor in der cli zulassen und alles andere vorher nillen. Dann auch alles aus global entfernen, was man vllt. benutzen könnte aber nicht sollte und sonst vllt. nach editor verschieben.
* Up/Down key in console (history)
* Only show component-info in scene window if component is actually used in the scene
* Limit number of lines in console -> config file maybe?
* Properly passing mousewheel events so scrollbars do what they should do at all times
* Falls komplette deepe Kopien von map auf dem Mapstack ein Speicherproblem bergen, nur alle X einträge voll speichern + delta-befehle
* J-Query mäßig verschiedene Entites selecten (nach id/type) und operationen anwenden

Bugs:
* GUI
	* Zahlen am Ende des Inputs von Numberwheels eingeben crasht das Programm
	* Breakout-Widgets sind kaka (siehe Numberwheel für's grid spacing) (oder close-buttons)
	* Numberwheel-Textfelder sind fuckig. (man kann nicht löschen oder effektiv zahlen ändern)
	* Checkboxes verstehen nicht, dass man weiter hovert, wenn man die gerade gecheckt/unchecked hat
* Up/Down mit multiple selection macht funky sachen, wenn alle ausgewählten schon ganz oben sind
* editModes kacken ein bisschen ab, wenn man position, scale oder rotation des Transform-Components auf nil setzt